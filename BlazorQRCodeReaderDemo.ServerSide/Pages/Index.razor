@page "/"
@inject ISnackbar Snackbar

<div class="d-flex justify-center">
    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="OpenReader" Class="my-4">Scan Qr Code</MudButton>
</div>

<div class="d-flex justify-center">
    @if (showScanBarcode)
    {
        <QrReader ApplyError="ApplyError" ApplyQrCode="ApplyQrCode" CloseReader="CloseReader" />
    }
    else if (isLoadingSomething)
    {
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
    }
    else if (!string.IsNullOrEmpty(errorMessage))
    {
        <MudText><p>@errorMessage</p></MudText>
    }
</div>

@code {

    private bool showScanBarcode = false;
    private string? barCode;
    private string? errorMessage;
    private bool isLoadingSomething;

    private Task ApplyError(string message)
    {
        showScanBarcode = false;
        this.errorMessage = message;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private async Task ApplyQrCode(string result)
    {
        Snackbar.Add($"QrCode read: {result}");
        showScanBarcode = false;
        await DoSomething();
    }

    private void CloseReader()
    {
        showScanBarcode = false;
    }

    private void OpenReader()
    {
        showScanBarcode = true;
    }

    private async Task DoSomething()
    {
        isLoadingSomething = true;
        await Task.Delay(2000);
        Snackbar.Add("Did something!", Severity.Success);
        isLoadingSomething = false;
    }

}